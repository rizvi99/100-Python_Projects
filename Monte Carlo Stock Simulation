import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import datetime as dt
!pip install pandas_datareader
from pandas_datareader import data as pdr

def get_data(stocks, start, end):
  stockData = pdr.get_data_yahoo(stocks, start, end)
  stockData = stockData['Close']
  returns = stockData.pct_change()
  meanReturns = returns.mean()
  covMatrix = returns.cov()
  return meanReturns, covMatrix

stocklist = ['MSFT','TSLA','AAPL','NFLX','GOOG','FB']
stocks = [stock + '.xx' for stock in stocklist]  # xx - Enter any extension to list to the stock exchange
endDate = dt.datetime.now()
startDate = endDate - dt.timedelta(days = 300)
meanReturns, covMatrix = get_data(stocks, startDate, endDate)

weights = np.random.random(len(meanReturns))
weights /= np.sum(weights)

#Monte Carlo Method

#Number of simulations
mc_sims = 100
T =100 #timeframe in days
meanM = np.full(shape=(T, len(weghts)), fill_value=meanReturns)


portfolio_sims = np.full(shape=(T, mc_sims), fill_value=0.0)


for m in range(0,mc_sims):
  #MC loops
  Z = np.random.normal(size=(T, len(weights)))
  L = np.linalg.cholesky(covMatrix)
  dailyReturns = meanM + np.inner(L,Z)
  portfolio_sims[:,m] = np.cumprod(np.inner(weights, dailyReturns.T)+1)*initialPortfolio

plt.plot(portfolio_sims)
plt.ylabel('Portfolio Value ($)')
plt.xlabel('Days')
plt.title('MC Simulation of a stock portfolio')
plt.show()
